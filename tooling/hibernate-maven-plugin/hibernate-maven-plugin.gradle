/*
 * SPDX-License-Identifier: Apache-2.0
 * Copyright Red Hat Inc. and Hibernate Authors
 */

plugins {
    id( "local.java-module" )
    id( "local.publishing" )
    id( "local.code-quality" )
    id( "org.gradlex.maven-plugin-development" ) version "1.0.3"
}

description = "Maven plugin to integrate aspects of Hibernate into your build."

dependencies {
    implementation( projects.hibernateCore )

    implementation( "org.apache.maven:maven-plugin-api:3.6.3" )
    implementation( "org.apache.maven:maven-project:2.2.1" )
    implementation( "org.apache.maven.shared:file-management:3.1.0" )

    compileOnly( "org.apache.maven.plugin-tools:maven-plugin-annotations:3.6.0" )
}

def releasePrepareTask = tasks.register( "releasePrepare" ) {
    group = "release-prepare"
    description = "See :release:releasePrepare for details.  Here we hook in the `check` task."

    dependsOn( tasks.check )
}

// used from the h2 CI job
tasks.register( "preVerifyRelease" ) {
    group = "release-prepare"
    description = "Delegates to `releasePrepare` task"

    dependsOn( releasePrepareTask )
}

def publishingExtension = project.extensions.getByType( PublishingExtension )
publishingExtension.publications.named( "publishedArtifacts", MavenPublication ) {
    from( components.java )

    // Adjust the pom for 3 things:
    pom.withXml { xml ->
        def node = xml.asNode()

        // 1. set packaging to maven-plugin
        node.version.plus {
            packaging("maven-plugin")
        }

        // 2 y 3. scope of org.apache.maven dependencies
        node.dependencies.dependency.findAll { dep ->
            dep.groupId.text().startsWith("org.apache.maven")
        }.each { dep ->
            if (!dep.groupId.text().startsWith("org.apache.maven.shared")) {
                dep.scope*.value = "provided"
            }
        }
    }
}

