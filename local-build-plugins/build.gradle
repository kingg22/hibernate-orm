/*
 * SPDX-License-Identifier: Apache-2.0
 * Copyright Red Hat Inc. and Hibernate Authors
 */
plugins {
	id( "java-gradle-plugin" )
	id( "groovy-gradle-plugin" )
    id( "groovy" )
	alias( libs.plugins.spotless )
}

repositories {
    gradlePluginPortal()
	mavenCentral()
}

group = "org.hibernate.build"
version = "1.0.0-SNAPSHOT"

dependencies {
    implementation( localGroovy() )
	implementation( gradleApi() )

	implementation( libs.jakarta.inject )

	implementation( libs.jandex )
	implementation( libs.httpclient )
	implementation( libs.jakarta.jsonbApi )
	implementation( libs.jakarta.jsonApi )
	implementation( libs.jakarta.jsonb )
	implementation( libs.jsoup )

	// implementation( libs.forbiddenapis )

	implementation( libs.maven.embedder )
	implementation( libs.maven.compat )
	implementation( libs.maven.resolver.connector.basic )
	implementation( libs.maven.resolver.transport.http )
	implementation( libs.slf4j.simple )
}

tasks.compileJava {
	options.encoding = "UTF-8"
	sourceCompatibility = "11"
	targetCompatibility = "11"
}

gradlePlugin {
	plugins {
		register( "databaseServicePlugin" ) {
			id = "org.hibernate.orm.database-service"
			implementationClass = "org.hibernate.orm.db.DatabaseServicePlugin"
		}
		register( "antlrPlugin" ) {
			id = "org.hibernate.orm.antlr"
			implementationClass = "org.hibernate.orm.antlr.AntlrPlugin"
		}
		register( "jakartaPlugin" ) {
			id = "org.hibernate.orm.jakarta"
			implementationClass = "org.hibernate.orm.jakarta.JakartaPlugin"
		}
		register( "jakartaPublishPlugin" ) {
			id = "org.hibernate.orm.jakarta-publish"
			implementationClass = "org.hibernate.orm.jakarta.JakartaPublishingPlugin"
		}
		register( "reportsPlugin" ) {
			id = "org.hibernate.orm.build.reports"
			implementationClass = "org.hibernate.orm.post.ReportGenerationPlugin"
		}
		register( "docPubPlugin" ) {
			id = "org.hibernate.orm.build.doc-pub"
			implementationClass = "org.hibernate.orm.docs.DocumentationPublishingPlugin"
		}
		register( "envSettings" ) {
			id = "org.hibernate.orm.build.env-settings"
			implementationClass = "org.hibernate.orm.env.EnvironmentSettingsPlugin"
		}
		register( "jdkVersionSettings" ) {
			id = "org.hibernate.orm.build.jdks-settings"
			implementationClass = "org.hibernate.orm.toolchains.JdkVersionSettingsPlugin"
		}
		register( "settingsDocumentationPlugin" ) {
			id = "org.hibernate.orm.build.settings-doc"
			implementationClass = "org.hibernate.orm.properties.SettingsDocumentationPlugin"
		}
		register( "jdkVersionsPlugin" ) {
			id = "org.hibernate.orm.build.jdks"
			implementationClass = "org.hibernate.orm.toolchains.JdkVersionPlugin"
		}
		register( "javaModulePlugin" ) {
			id = "org.hibernate.orm.build.java-module"
			implementationClass = "org.hibernate.orm.toolchains.JavaModulePlugin"
		}
		register( "mavenEmbedder" ) {
			id = "org.hibernate.build.maven-embedder"
			implementationClass = "org.hibernate.build.maven.embedder.MavenEmbedderPlugin"
		}
		register( "xjc-plugin" ) {
			id = "local-xjc-plugin"
			implementationClass = "org.hibernate.build.xjc.XjcPlugin"
		}
		register("aspect-module") {
			id = "local.module"
			implementationClass = "org.hibernate.build.aspects.ModuleAspect"
		}
	}
}

spotless {
	//Dont fail during the check: rather than enforcing guidelines, we use this plugin to fix mistakes automatically.
	enforceCheck = false
	java {
		targetExclude( "**/target/**/*.java" )
		licenseHeaderFile( rootProject.file( "../shared/config/spotless/license.java" ) )
		removeUnusedImports()
		leadingSpacesToTabs( 4 )
		trimTrailingWhitespace()
		endWithNewline()
	}
}

tasks.named( "compileJava" ) {
    dependsOn( tasks.named( "spotlessJavaApply" ) )
}
